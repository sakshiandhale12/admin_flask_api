from marshmallow import Schema, fields
from .models import EppsHrEmpMst,EppsEcodeMst,EppsCompanyMst
from marshmallow import Schema, fields as ma_fields
from marshmallow import Schema, fields as ma_fields
from flask_sqlalchemy import SQLAlchemy
from marshmallow_sqlalchemy import SQLAlchemyAutoSchema
from marshmallow import fields

class EmployeeSerializer(Schema):
    class Meta:
        fields = (
            'comp_cd', 'div_cd', 'emp_cd', 'emp_title', 'emp_first_name', 'emp_middle_name', 'emp_last_name',
            'emp_category', 'emp_desig', 'emp_qualification', 'date_of_join', 'date_of_leaving', 'dept_cd',
            'role_cd', 'prof_hdr_sr_no', 'emp_job_nature', 'emp_mob_no', 'emp_mail_id', 'emp_password', 'emp_dob',
            'emp_gender', 'maritial_status', 'pan_no', 'pf_no', 'esic_no', 'emp_blood_grp', 'emp_id_proof',
            'med_fitness', 'remarks', 'created_by', 'created_dt', 'updated_by', 'updated_dt', 'terminal_id',
            'active_yn', 'creator_role_cd', 'updator_role_cd', 'file_upload_sr_no', 'emp_uan_no', 'work_loc',
            'emp_type', 'emp_level_cd', 'emp_prv_exp', 'partner_loc_cd', 'partner_role_cd', 'emp_emerg_cont_name1',
            'emp_emerg_cont_relation1', 'emp_emerg_cont_number1', 'emp_emerg_cont_name2', 'emp_emerg_cont_relation2',
            'emp_emerg_cont_number2', 'auto_created', 'partner_cd', 'file_path', 'file_name', 'ref_emp_id',
            'client_upload_flag', 'telegram_chat_id', 'id', 'enabled', 'accountnonexpired', 'credentialsnonexpired',
            'accountnonlocked', 'password'
        )

# class EmployeeCreateSchema(Schema):
#     comp_cd = fields.Integer(default=1)  # Set default value for comp_cd
#     emp_first_name = fields.String(required=True)
#     emp_last_name = fields.String(required=True)
#     emp_mob_no = fields.String(required=True, validate=validate.Length(max=50))
#     emp_mail_id = fields.Email(required=True)
#     emp_password = fields.String(required=True, validate=validate.Length(max=100))
#     emp_type = fields.String(required=True, validate=validate.Length(max=1))

#     class Meta:
#         # Additional options if needed
#         pass


class EppsEcodeMstSchema(Schema):
    comp_cd = ma_fields.Integer(required=True)
    div_cd = ma_fields.Integer(required=True)
    ecode = ma_fields.String(required=True)
    tran_indicator = ma_fields.String()
    tran_indicator_type = ma_fields.String()
    bin_indicator = ma_fields.String()
    stock_report_yn = ma_fields.String()
    stock_report_ip_effect = ma_fields.Integer()
    stock_report_op_effect = ma_fields.Integer()
    post_fas_voucher = ma_fields.String()
    fas_voucher_type = ma_fields.String()
    db_gl_cd = ma_fields.Integer()
    db_sl_cd = ma_fields.String()
    cr_gl_cd = ma_fields.Integer()
    cr_sl_cd = ma_fields.String()
    frt_applicable_yn = ma_fields.String()
    frt_bpa_effect = ma_fields.String()
    sbct_57f4_flag = ma_fields.String()
    sbct_process_flag = ma_fields.String()
    sbct_grn_flag = ma_fields.String()
    mob_noti_approver = ma_fields.String()
    mob_noti_requestor = ma_fields.String()
    default_access_flag = ma_fields.String()
    remarks = ma_fields.String()
    audit_doc_id = ma_fields.String()
    audit_doc_dt = ma_fields.Date()
    tree_cd = ma_fields.Integer()
    created_dt = ma_fields.DateTime()
    created_by = ma_fields.String()
    updated_dt = ma_fields.DateTime()
    updated_by = ma_fields.String()
    terminal_id = ma_fields.String()
    active_yn = ma_fields.String()
    web_noti_approver = ma_fields.String()
    web_noti_requestor = ma_fields.String()
    self_approval = ma_fields.String()
    creator_role_cd = ma_fields.Integer()
    updator_role_cd = ma_fields.Integer()
    credit_management_applicable = ma_fields.String()
    item_tran_tax = ma_fields.String()
    item_rt_flag = ma_fields.String()
    item2emp_link_flag = ma_fields.String()
    item2cust_link_flag = ma_fields.String()
    item2supp_link_flag = ma_fields.String()
    pre_printed_rep_yn = ma_fields.String()
    email_yn = ma_fields.Integer()
    sms_yn = ma_fields.Integer()
    supp_batch_flag = ma_fields.Integer()
    iss_for_resv_stock = ma_fields.String()
    ecode_level_doc_no_string = ma_fields.String()
    bkdate_control_days = ma_fields.Integer()
    frt_gl_cd = ma_fields.Integer()
    frt_sl_cd = ma_fields.String()

class EppsCityMstSerializer(Schema):
    comp_cd = fields.Integer(required=True)
    country_cd = fields.Integer(required=True)
    state_cd = fields.Integer(required=True)
    city_cd = fields.Integer(required=True)
    city_nm = fields.String()
    created_by = fields.String()
    created_dt = fields.DateTime()
    updated_by = fields.String()
    updated_dt = fields.DateTime()
    terminal_id = fields.String()
    active_yn = fields.String()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()

from marshmallow import Schema, fields

class EppsCompanyMstSerializer(Schema):
    comp_cd = fields.Integer(required=True)
    comp_disp_name = fields.String(required=True)
    comp_long_name = fields.String()
    add1 = fields.String()
    add2 = fields.String()
    add3 = fields.String()
    city_cd = fields.Integer()
    pin = fields.String()
    country_cd = fields.Integer()
    state_cd = fields.Integer()
    tel_no1 = fields.String()
    tel_no2 = fields.String()
    fax_no1 = fields.String()
    fax_no2 = fields.String()
    website = fields.String()
    mail_id = fields.String()
    r_off_add1 = fields.String()
    r_off_add2 = fields.String()
    r_off_add3 = fields.String()
    r_off_city = fields.Integer()
    r_off_pin = fields.String()
    r_country_cd = fields.Integer()
    r_state_cd = fields.Integer()
    r_off_tel_no1 = fields.String()
    r_off_tel_no2 = fields.String()
    r_off_tel_no3 = fields.String()
    r_off_fax_no = fields.String()
    lst_no = fields.String()
    lst_dt = fields.Date()
    cst_no = fields.String()
    cst_dt = fields.Date()
    vat_no = fields.String()
    vat_dt = fields.Date()
    ex_reg_no = fields.String()
    created_by = fields.String()
    created_dt = fields.DateTime()
    updated_by = fields.String()
    updated_dt = fields.DateTime()
    terminal_id = fields.String()
    active_yn = fields.String()
    cin_no = fields.String()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    pan_no = fields.String()
    comp_license = fields.Raw()
    logo_path = fields.Raw()
    lite_cd = fields.Raw()
    epps_type = fields.String()
    comp_level_doc_no_string = fields.String()

class EppsCurrencyMstSerializer(Schema):
    comp_cd = fields.Integer(required=True)
    curr_cd = fields.Integer(required=True)
    curr_disp_name = fields.String(required=True)
    curr_long_name = fields.String()
    created_by = fields.String()
    created_dt = fields.DateTime()
    updated_by = fields.String()
    updated_dt = fields.DateTime()
    terminal_id = fields.String()
    active_yn = fields.String()
    curr_unit_name = fields.String()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    curr_rt_symbol = fields.String()
    curr_abbr = fields.String()
    curr_small_deno = fields.String()
    dflt_yn = fields.Integer()

#   from marshmallow import Schema, fields

class EppsSdCustomerMstSchema(Schema):
    comp_cd = fields.Integer(required=True)
    div_cd = fields.Integer(required=True)
    cust_cd = fields.Integer(required=True)
    cust_disp_name = fields.String()
    cust_long_name = fields.String()
    cust_type = fields.String()
    credit_control_flag = fields.String()
    credit_days = fields.Integer()
    credit_amt_limit = fields.Decimal(as_string=True)
    cst_no = fields.String()
    cst_date = fields.Date()
    it_pa_no = fields.String()
    tin_no = fields.String()
    tin_date = fields.Date()
    buss_type = fields.String()
    supp_cd_link = fields.Integer()
    gl_cd = fields.Integer()
    sl_cd = fields.String()
    tds_flag = fields.String()
    firm_status = fields.String()
    deductee_cd = fields.String()
    cust_approved_yn = fields.String()
    regular_cust_flag = fields.String()
    cust_collection_catg = fields.String()
    cust_bus_zone_cd = fields.Integer()
    old_customer_cd = fields.String()
    created_by = fields.String()
    created_dt = fields.DateTime(format='%Y-%m-%d %H:%M:%S')
    updated_by = fields.String()
    updated_dt = fields.DateTime(format='%Y-%m-%d %H:%M:%S')
    approved_by = fields.String()
    approved_dt = fields.DateTime(format='%Y-%m-%d %H:%M:%S')
    terminal_id = fields.String()
    active_yn = fields.String()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    cin_no = fields.String()
    file_upload_sr_no = fields.Integer()
    gst_registered = fields.String()
    gstin_no = fields.String()
    gstin_type = fields.String()
    cust_sc_cd = fields.Integer()
    mobile_no = fields.String()
    dob = fields.Date()
    dm_hdr_sr_no = fields.Integer()
    cust_remarks = fields.String()
    interest_rt = fields.Decimal(as_string=True)
    ref_lead_hdr_sr_no = fields.Integer()
    cust_otp = fields.String()
    cust_ref_id = fields.String()
    client_upload_flag = fields.Integer()
    service_partner_type = fields.String()
    cust_unid = fields.String()
    tcs_applicable_yn = fields.Integer()
    show_disc_yn = fields.Integer()
    cust_id_no = fields.String()
    pdc_flag = fields.String()
    cheque_no = fields.String()
    cheque_dt = fields.Date()
    amount = fields.Decimal(as_string=True)
    pay_name = fields.String()
    tolerance_qty = fields.Decimal(as_string=True)
    parent_cust_cd = fields.Integer()

from marshmallow import Schema, fields, validate

class EppsDeptMstSerializer(Schema):
    comp_cd = fields.Integer(required=True)
    dept_cd = fields.Integer(required=True)
    dept_disp_name = fields.String(required=True, validate=validate.Length(max=50))
    dept_long_name = fields.String(validate=validate.Length(max=100))
    created_by = fields.String(validate=validate.Length(max=10))
    created_dt = fields.DateTime()
    updated_by = fields.String(validate=validate.Length(max=10))
    updated_dt = fields.DateTime()
    terminal_id = fields.String(validate=validate.Length(max=100))
    active_yn = fields.String(validate=validate.OneOf(['Y', 'N']))
    default_fas_dept = fields.String(validate=validate.OneOf(['Y', 'N']))
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    dept_type = fields.String(validate=validate.Length(max=10))


class EppsDivisionMstSchema(Schema):
    comp_cd = fields.Integer()
    div_cd = fields.Integer()
    div_disp_name = fields.Str()
    div_long_name = fields.Str()
    add1 = fields.Str()
    add2 = fields.Str()
    add3 = fields.Str()
    city_cd = fields.Integer()
    pin = fields.Str()
    country_cd = fields.Integer()
    state_cd = fields.Integer()
    tel_no1 = fields.Str()
    tel_no2 = fields.Str()
    fax_no1 = fields.Str()
    fax_no2 = fields.Str()
    website = fields.Str()
    mail_id = fields.Str()
    cst_no = fields.Str()
    cst_dt = fields.Date()
    lst_no = fields.Str()
    lst_dt = fields.Date()
    created_by = fields.Str()
    created_dt = fields.DateTime()
    updated_by = fields.Str()
    updated_dt = fields.DateTime()
    terminal_id = fields.Str()
    active_yn = fields.Str()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    loc_disp_name = fields.Str()
    loc_cd = fields.Integer()
    dept_cd = fields.Integer()
    file_upload_sr_no = fields.Integer()
    pan_no = fields.Str()
    cin_no = fields.Str()
    import_licence_no = fields.Str()
    importers_code = fields.Str()
    gst_config_flag = fields.Str()
    logo_path = fields.Raw()
    gst_app_from_dt = fields.Date()
    gst_composite_scheme = fields.Str()
    gst_asp_tax_id = fields.Str()
    gst_asp_token_id = fields.Str()
    div_as_comp = fields.Str()
    div_level_doc_no_string = fields.Str()
    address_print_flag = fields.Str()
    iso_no = fields.Str()

class EppsFinyrMstSchema(Schema):
    comp_cd = fields.Integer()
    fin_yr = fields.Integer()
    fin_desc = fields.Str()
    dflt_yn = fields.Str()
    from_dt = fields.Date()
    to_dt = fields.Date()
    doc_no_string = fields.Str()
    allow_qry_yn = fields.Str()
    created_by = fields.Str()
    created_dt = fields.DateTime()
    updated_by = fields.Str()
    updated_dt = fields.DateTime()
    terminal_id = fields.Str()
    active_yn = fields.Str()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()

class EppsMmGroupMstSchema(Schema):
    comp_cd = fields.Integer(required=True)
    grp_cd = fields.Integer(required=True)
    grp_disp_name = fields.Str(required=True)
    grp_long_name = fields.Str(required=True)
    mnt_grp_flag = fields.Str()
    created_by = fields.Str()
    created_dt = fields.DateTime()
    updated_by = fields.Str()
    updated_dt = fields.DateTime()
    terminal_id = fields.Str()
    active_yn = fields.Str(required=True)
    group_type = fields.Str()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    grp_ref_cd = fields.Str()
    group_unid = fields.Str()


class EppsMmItemMstSchema(Schema):
    comp_cd = fields.Integer(required=True)
    grp_cd = fields.Integer(required=True)
    grs_cd = fields.Integer(required=True)
    grss_cd = fields.Integer(required=True)
    itemcode = fields.Str(required=True)
    item_disp_name = fields.Str(required=True)
    item_long_name = fields.Str()
    item_category = fields.Str()

class EppsLocationMstSchema(Schema):
    comp_cd = fields.Integer(required=True)
    div_cd = fields.Integer(required=True)
    loc_cd = fields.Integer(required=True)
    loc_disp_name = fields.Str(required=True)
    loc_long_name = fields.Str()
    add1 = fields.Str(required=True)
    add2 = fields.Str()
    add3 = fields.Str()
    city_cd = fields.Integer()
    pin = fields.Str()
    country_cd = fields.Integer(required=True)
    state_cd = fields.Integer(required=True)
    tel_no1 = fields.Str()
    tel_no2 = fields.Str()
    fax_no1 = fields.Str()
    fax_no2 = fields.Str()
    website = fields.Str()
    mail_id = fields.Email()
    cst_no = fields.Str()
    cst_dt = fields.Date()
    lst_no = fields.Str()
    lst_dt = fields.Date()
    ex_reg_no = fields.Str()
    ex_reg_dt = fields.Date()
    ex_range = fields.Str()
    ex_div = fields.Str()
    ex_comm = fields.Str()
    ecc_no = fields.Str()
    it_pan_no = fields.Str()
    it_pan_dt = fields.Date()
    created_by = fields.Str()
    created_dt = fields.DateTime()
    updated_by = fields.Str()
    updated_dt = fields.DateTime()
    terminal_id = fields.Str()
    active_yn = fields.Str(required=True)
    vat_no = fields.Str()
    vat_dt = fields.Date()
    service_tax_no = fields.Str()
    service_tax_date = fields.DateTime()
    service_tax_commissioner = fields.Str()
    service_tax_division = fields.Str()
    service_tax_commessioner_cd = fields.Str()
    iso_ref_doc_no = fields.Str()
    iso_ref_doc_dt = fields.Date()
    manufacturing_loc_flag = fields.Str()
    frt_zone_cd = fields.Integer()
    ref_supp_cd = fields.Integer()
    ref_cust_cd = fields.Integer()
    excise_jurisdiction = fields.Str()
    pla_no = fields.Str()
    exc_license_type = fields.Str()
    short_add_for_stickers = fields.Str()
    gl_cd = fields.Integer()
    sl_cd = fields.Str()
    loc_type = fields.Str()
    costcenter_active = fields.Str()
    foreign_currency_active = fields.Str()
    creator_role_cd = fields.Integer()
    updator_role_cd = fields.Integer()
    internal_posted_flag = fields.Str()
    cv_pd_flag = fields.Str()
    file_upload_sr_no = fields.Integer()
    group_location = fields.Str()
    gst_registered = fields.Str()
    gstin_no = fields.Str()
    gstin_type = fields.Str()
    gst_asp_token_id = fields.Str()
    gst_asp_tax_id = fields.Str()
    loc_category = fields.Str()
    partner_cd = fields.Str()
    eway_auto_yn = fields.Str()
    eway_gsp_app_name = fields.Str()
    eway_gsp_environment = fields.Str()
    eway_gsp_client_id = fields.Str()
    eway_gsp_client_secret = fields.Str()
    eway_gsp_created_by = fields.Str()
    eway_nic_user_name = fields.Str()
    eway_nic_password = fields.Str()
    loc_level_doc_no_string = fields.Str()
    tan_no = fields.Str()
    client_id = fields.Str()
    client_secret = fields.Str()
    e_inv_user_name = fields.Str()
    einv_password = fields.Str()
    public_key = fields.Str()
    token_valid_time = fields.Str()
    e_inv_token_id = fields.Str()
    e_inv_appkey = fields.Str()
    e_inv_sek = fields.Str()
    bonded_wh = fields.Integer()
    parent_loc_cd = fields.Integer(required=True)
    un_id = fields.Str()
    budget_center_flag = fields.Integer()
    pfx_sign = fields.Str()
    ref_loc_cd = fields.Str()

